{"version":3,"sources":["service.js","components/Card/styles.js","components/Card/Card.js","components/Button/styles.js","components/Button/Button.js","components/Post/styles.js","components/Post/Post.js","components/Heading/index.js","components/Page/index.js","components/AlbumsModal/styles.js","components/Loader/styles.js","components/Loader/Loader.js","components/AlbumsModal/AlbumsModal.js","containers/Users/styles.js","containers/Users/Users.js","containers/Posts/styles.js","containers/Posts/Posts.js","store.js","styles.js","App.js","index.js"],"names":["networkApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getUsers","query","getPosts","id","concat","getAlbums","useGetUsersQuery","useGetPostsQuery","useGetAlbumsQuery","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Title","h4","_templateObject2","SubTitle","span","_templateObject3","ButtonsWrapper","_templateObject4","Card","_ref","title","subtitle","children","React","createElement","Styled","Button","button","props","_objectWithoutProperties","Body","p","Post","body","Heading","h1","Page","ModalContentWrapper","AlbumItem","AlbumsWrapper","Loader","Object","assign","xmlns","width","height","preserveAspectRatio","style","margin","display","shapeRendering","viewBox","cx","cy","r","fill","stroke","strokeDasharray","strokeWidth","attributeName","dur","keyTimes","repeatCount","type","values","AlbumsModal","navigate","useNavigate","matches","useMatches","users","data","useParams","_useGetAlbumsQuery","isFetching","handleClose","useCallback","currentUser","find","user","isVisible","pathname","includes","console","log","Rodal","className","visible","onClose","Fragment","username","map","album","key","ListWrapper","CardStyles","Users","_useGetUsersQuery","handlePostsClicked","handleAlbumsClicked","name","onClick","Posts","_useGetPostsQuery","Link","textDecoration","to","post","store","configureStore","reducer","_defineProperty","middleware","getDefaultMiddleware","setupListeners","dispatch","GlobalStyle","createGlobalStyle","router","createHashRouter","path","element","Navigate","App","Provider","RouterProvider","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f4d249a0.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const networkApi = createApi({\r\n  reducerPath: 'usersApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://jsonplaceholder.typicode.com/' }),\r\n  endpoints: (builder) => ({\r\n    getUsers: builder.query({\r\n      query: () => `users`,\r\n    }),\r\n    getPosts: builder.query({\r\n      query: (id) => `users/${id}/posts`,\r\n    }),\r\n    getAlbums: builder.query({\r\n      query: (id) => `users/${id}/albums`,\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const { useGetUsersQuery, useGetPostsQuery, useGetAlbumsQuery } = networkApi;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    background: white;\r\n    flex-shrink: 0;\r\n    border: 1px solid #e2e8f0;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    position: relative;\r\n\r\n    transition: box-shadow 0.3s, transform 0.3s;\r\n\r\n    &:hover {\r\n        box-shadow: 10px 17px 5px 0px rgba(220,220,220,1);\r\n        transform: translate(-10px, -14px);\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h4`\r\n    font-size: 26px;\r\n    font-weight: 900;\r\n`;\r\n\r\nexport const SubTitle = styled.span`\r\n    color: #bbbbbb;\r\n    font-size: 14px;\r\n    font-weight: 900;\r\n`;\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    padding-top: 20px;\r\n    display: flex;\r\n    gap: 20px;\r\n`;","import React from 'react';\r\nimport * as Styled from './styles';\r\n\r\nexport const Card = ({ title, subtitle, children}) => {\r\n    return (\r\n        <Styled.Wrapper>\r\n            <Styled.Title>{title}</Styled.Title>\r\n            <Styled.SubTitle>{subtitle}</Styled.SubTitle>\r\n            <Styled.ButtonsWrapper>\r\n                {children}\r\n            </Styled.ButtonsWrapper>\r\n        </Styled.Wrapper>\r\n    );\r\n};","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  background-color: #fff;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 1.5rem;\r\n  box-sizing: border-box;\r\n  color: #0d172a;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  line-height: 1;\r\n  padding: 1rem 1.6rem;\r\n  font-family:\"Ysabeau SC\", sans-serif;\r\n  text-align: center;\r\n  text-decoration: none #0d172a solid;\r\n  text-decoration-thickness: auto;\r\n  transition: all .1s cubic-bezier(.4, 0, .2, 1);\r\n  box-shadow: 0px 1px 2px rgba(166, 175, 195, 0.25);\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n\r\n  &:hover {\r\n    background-color: #1e293b;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\n","import React from 'react';\r\nimport * as Styled from './styles';\r\n\r\nexport const Button = ({children, ...props}) => <Styled.Button {...props}>{children}</Styled.Button>","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 10px 20px;\r\n    border-radius: 10px;\r\n    background: white;\r\n    flex-shrink: 0;\r\n    border: 1px solid #e2e8f0;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n`;\r\n\r\nexport const Title = styled.h4`\r\n    font-size: 26px;\r\n    font-weight: 900;\r\n    line-height: 1.4;\r\n    margin-bottom: 20px;\r\n\r\n    &:first-letter {\r\n        text-transform: uppercase;\r\n    }\r\n`;\r\n\r\nexport const Body = styled.p`\r\n    &:first-letter {\r\n        text-transform: uppercase;\r\n    }\r\n`;","import React from 'react';\r\nimport * as Styled from './styles';\r\n\r\nexport const Post = ({ title, body, ...props}) => {\r\n    return (\r\n        <Styled.Wrapper {...props}>\r\n            <Styled.Title>{title}</Styled.Title>\r\n            <Styled.Body>{body}</Styled.Body>\r\n        </Styled.Wrapper>\r\n    );\r\n};","import styled from 'styled-components';\r\n\r\nexport const Heading = styled.h1`\r\n    font-size: 60px;\r\n    font-weight: 900;\r\n    margin-bottom: 40px;\r\n\r\n    @media screen and (max-width: 850px) {\r\n        font-size: 40px;\r\n        margin-bottom: 30px;\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Page = styled.div`\r\n    width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 40px 0;\r\n\r\n    @media screen and (max-width: 1300px) {\r\n        width: 800px;\r\n    }\r\n\r\n    @media screen and (max-width: 850px) {\r\n        width: calc(100% - 40px);\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ModalContentWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n`;\r\n\r\nexport const Title = styled.h4`\r\n    font-size: 26px;\r\n    font-weight: 900;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const AlbumItem = styled.p`\r\n    padding: 5px 10px;\r\n`;\r\n\r\nexport const AlbumsWrapper = styled.div`\r\n    overflow: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    ${AlbumItem}:not(:last-child) {\r\n        border-bottom: 1px solid #acacac;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    width: 100%;\r\n    height: 300px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;","import React from \"react\";\r\nimport * as Styled from './styles';\r\n\r\nexport const Loader = (props) => (\r\n  <Styled.Wrapper {...props}>\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={204}\r\n      height={204}\r\n      preserveAspectRatio=\"xMidYMid\"\r\n      style={{\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        shapeRendering: \"auto\",\r\n      }}\r\n      viewBox=\"0 0 100 100\"\r\n      {...props}\r\n    >\r\n      <circle\r\n        cx={50}\r\n        cy={50}\r\n        r={18}\r\n        fill=\"none\"\r\n        stroke=\"#1d0e0b\"\r\n        strokeDasharray=\"84.82300164692441 30.274333882308138\"\r\n        strokeWidth={2}\r\n      >\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          dur=\"1s\"\r\n          keyTimes=\"0;1\"\r\n          repeatCount=\"indefinite\"\r\n          type=\"rotate\"\r\n          values=\"0 50 50;360 50 50\"\r\n        />\r\n      </circle>\r\n    </svg>\r\n  </Styled.Wrapper>\r\n);\r\n","import React, { useCallback } from 'react';\r\nimport Rodal from 'rodal';\r\nimport { useParams, useMatches, useNavigate  } from 'react-router-dom';\r\nimport { useGetAlbumsQuery, useGetUsersQuery } from '../../service';\r\nimport { Loader } from '../Loader';\r\nimport * as Styled from './styles';\r\n\r\nexport const AlbumsModal = () => {\r\n    const navigate = useNavigate();\r\n    const matches = useMatches();\r\n    const {data: users} = useGetUsersQuery();\r\n    const { id } = useParams();\r\n    const { data, isFetching } = useGetAlbumsQuery(id);\r\n\r\n    const handleClose = useCallback(() => {navigate('/users')},[navigate]);\r\n\r\n    const currentUser = users && users.find((user) => user.id === +id);\r\n\r\n    const isVisible = matches[0].pathname.includes('albums');\r\n\r\n    console.log(id, isFetching);\r\n\r\n    return (\r\n        <Rodal className=\"albums-modal\" width={800} height={500} visible={isVisible} onClose={handleClose}>\r\n            <Styled.ModalContentWrapper>\r\n                {isFetching ? <Loader style={{ height: '100%' }} /> : (\r\n                    <React.Fragment>\r\n                        {currentUser && <Styled.Title>{`${currentUser.username}'s albums`}</Styled.Title>}\r\n                        <Styled.AlbumsWrapper>\r\n                            {data.map((album) => (\r\n                                <Styled.AlbumItem key={album.id}>\r\n                                    {album.title}\r\n                                </Styled.AlbumItem>\r\n                            ))}\r\n                        </Styled.AlbumsWrapper>\r\n                    </React.Fragment>\r\n                )}\r\n            </Styled.ModalContentWrapper>\r\n        </Rodal>\r\n    );\r\n};","import styled from 'styled-components';\r\nimport { CardStyles } from '../../components';\r\n\r\nconst GAP = 20;\r\n\r\nexport const ListWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: ${GAP}px;\r\n\r\n\r\n    ${CardStyles.Wrapper} {\r\n        width: calc(100% / 3 - (${GAP}px * 2) / 3);\r\n\r\n        @media screen and (max-width: 1300px) {\r\n            width: calc(100% / 2 - ${GAP}px / 2);\r\n        }\r\n\r\n        @media screen and (max-width: 850px) {\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    \r\n`;","import React, { useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useGetUsersQuery } from '../../service';\r\nimport { Card, Page, Heading, Button, AlbumsModal, Loader } from '../../components';\r\nimport * as Styled from './styles';\r\n\r\n\r\nexport const Users = () => {\r\n    const navigate = useNavigate();\r\n    \r\n    const { data, isFetching } = useGetUsersQuery();\r\n\r\n    const handlePostsClicked = useCallback((id) => () => {navigate(`/users/${id}/posts`)}, [navigate]);\r\n    const handleAlbumsClicked = useCallback((id) => () => {navigate(`/users/${id}/albums`)}, [navigate]);\r\n\r\n    return (\r\n        <Page>\r\n            <Heading>Users</Heading>\r\n            <Styled.ListWrapper>\r\n                {isFetching ? <Loader /> : data.map((user) => (\r\n                    <Card key={user.id} title={user.username} subtitle={user.name}>\r\n                        <Button onClick={handlePostsClicked(user.id)}>Posts</Button>\r\n                        <Button onClick={handleAlbumsClicked(user.id)}>Albums</Button>\r\n                    </Card>\r\n                ))}\r\n            </Styled.ListWrapper>\r\n            <AlbumsModal />\r\n        </Page>\r\n    );\r\n}","import styled from 'styled-components';\r\n\r\nexport const ListWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n`;","import React from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useGetPostsQuery, useGetUsersQuery } from '../../service';\r\nimport { Page, Heading, Post, Loader } from '../../components';\r\nimport * as Styled from './styles';\r\n\r\nexport const Posts = () => {\r\n    const { id } = useParams();\r\n    const {data: users} = useGetUsersQuery();\r\n\r\n    const currentUser = users && users.find((user) => user.id === +id);\r\n\r\n    const { data, isFetching } = useGetPostsQuery(id);\r\n\r\n    return (\r\n        <Page>\r\n            <Link style={{ textDecoration: 'none' }} to='/users'>{'< Users'}</Link>\r\n            {isFetching ? <Loader /> : (\r\n                <React.Fragment>\r\n                    {currentUser && <Heading>{`${currentUser.username}'s posts`}</Heading>}\r\n                    <Styled.ListWrapper>\r\n                        {data.map((post) => <Post key={post.id} {...post}/>)}\r\n                    </Styled.ListWrapper>\r\n                </React.Fragment>\r\n            )}\r\n        </Page>\r\n    );\r\n};","import { configureStore } from '@reduxjs/toolkit'\r\nimport { setupListeners } from '@reduxjs/toolkit/query'\r\nimport { networkApi } from './service'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [networkApi.reducerPath]: networkApi.reducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(networkApi.middleware),\r\n})\r\n\r\nsetupListeners(store.dispatch)","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body {\r\n        margin: 0;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        font: 1.2em \"Ysabeau SC\", sans-serif !important;\r\n    }\r\n\r\n    // Rodal modal restyling\r\n\r\n    .albums-modal .rodal-dialog {\r\n        @media screen and (max-width: 850px) {\r\n            width: calc(100% - 40px) !important;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Users, Posts } from './containers';\nimport { store } from './store';\nimport {\n  createHashRouter,\n  RouterProvider,\n  Navigate\n} from \"react-router-dom\";\nimport GlobalStyle from './styles';\nimport 'rodal/lib/rodal.css';\n\nconst router = createHashRouter([\n  {\n    path: '*',\n    element: <Navigate  to=\"users\" />\n  },\n  {\n    path: \"/users/:id?/albums?\",\n    element: <Users />,\n  },\n  {\n    path: \"/users/:id/posts\",\n    element: <Posts />,\n  },\n]);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n      <RouterProvider router={router} />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './reset.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}